# Automated Testing Pipeline
# Comprehensive test suite with dependency caching for optimal performance

name: Automated Testing

# Controls when the workflow will run
on:
  push:
    branches:
      - master
      - main
  pull_request:
    branches:
      - master
      - main

jobs:
  # Environment setup and dependency caching job
  setup-environment:
    name: Setup Environment and Cache Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4

      - name: Set up BEAM tools
        uses: erlef/setup-beam@v1
        with:
          otp-version: "28"
          gleam-version: "1.11.1"
          rebar3-version: "3"

      # Generate a key for the cache based on the lock file
      - name: Generate Dependency Cache Key
        id: cache-key
        run: echo "key=gleam-deps-${{ hashFiles('gleam.lock') }}" >> $GITHUB_OUTPUT

      # Cache the downloaded dependencies to speed up subsequent runs
      - name: Cache Project Dependencies
        uses: actions/cache@v4
        with:
          path: build/packages
          key: ${{ steps.cache-key.outputs.key }}
          restore-keys: |
            gleam-deps-

      - name: Download Project Dependencies
        # Only run 'gleam deps download' if the cache was not restored
        if: steps.cache.outputs.cache-hit != 'true'
        run: gleam deps download

  # Comprehensive testing and code quality checks
  run-tests:
    name: Execute Tests and Quality Checks
    # This job depends on the 'setup-environment' job completing successfully
    needs: setup-environment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4

      - name: Set up BEAM tools
        uses: erlef/setup-beam@v1
        with:
          otp-version: "28"
          gleam-version: "1.11.1"
          rebar3-version: "3"

      # Generate the same cache key to find the correct cache
      - name: Generate Dependency Cache Key
        id: cache-key
        run: echo "key=gleam-deps-${{ hashFiles('gleam.lock') }}" >> $GITHUB_OUTPUT

      # Restore the cached dependencies from the setup job
      - name: Restore Cached Dependencies
        uses: actions/cache@v4
        with:
          path: build/packages
          key: ${{ steps.cache-key.outputs.key }}
          restore-keys: |
            gleam-deps-

      - name: Execute Comprehensive Test Suite
        run: gleam test

      - name: Validate Code Formatting Standards
        run: gleam format --check src test
